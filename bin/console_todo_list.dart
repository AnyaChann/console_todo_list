import 'dart:io';
import 'package:sqlite3/sqlite3.dart';

void insertSampleData(Database db) {
  try {
    // Ki·ªÉm tra xem b·∫£ng c√≥ d·ªØ li·ªáu hay ch∆∞a
    final result = db.select('SELECT COUNT(*) AS count FROM todos');
    final count = result.first['count'] as int;

    if (count == 0) {
      // Th√™m d·ªØ li·ªáu m·∫´u
      db.execute('INSERT INTO todos (title, isCompleted) VALUES (?, ?)', [
        'H·ªçc Flutter',
        0,
      ]);
      db.execute('INSERT INTO todos (title, isCompleted) VALUES (?, ?)', [
        'Xem t√†i li·ªáu SQLite',
        1,
      ]);
      db.execute('INSERT INTO todos (title, isCompleted) VALUES (?, ?)', [
        'Vi·∫øt ·ª©ng d·ª•ng Todo List',
        0,
      ]);
      print("ƒê√£ th√™m d·ªØ li·ªáu m·∫´u.");
    } else {
      print("D·ªØ li·ªáu ƒë√£ t·ªìn t·∫°i, kh√¥ng c·∫ßn th√™m d·ªØ li·ªáu m·∫´u.");
    }
  } catch (e) {
    print("L·ªói khi th√™m d·ªØ li·ªáu m·∫´u: $e");
  }
}

void main() {
  final db = sqlite3.open('todos.db');

  db.execute('''
    CREATE TABLE IF NOT EXISTS todos (
      id INTEGER PRIMARY KEY AUTOINCREMENT,
      title TEXT NOT NULL,
      isCompleted INTEGER NOT NULL DEFAULT 0
    )
  ''');

  // Th√™m d·ªØ li·ªáu m·∫´u
  insertSampleData(db);

  print("Ch√†o m·ª´ng ƒë·∫øn v·ªõi ·ª©ng d·ª•ng Todo List!");
  while (true) {
    print("\n==============================");
    print("       TODO LIST MENU         ");
    print("==============================");
    print("1. ‚ûï Th√™m c√¥ng vi·ªác");
    print("2. üìã Hi·ªÉn th·ªã danh s√°ch c√¥ng vi·ªác");
    print("3. ‚úèÔ∏è  C·∫≠p nh·∫≠t c√¥ng vi·ªác");
    print("4. ‚ùå X√≥a c√¥ng vi·ªác");
    print("5. ‚úÖ ƒê√°nh d·∫•u Ho√†n th√†nh/Ch∆∞a ho√†n th√†nh");
    print("6. üö™ Tho√°t");
    print("==============================\n");

    stdout.write("Nh·∫≠p l·ª±a ch·ªçn c·ªßa b·∫°n: ");
    final choice = stdin.readLineSync();

    switch (choice) {
      case '1':
        stdout.write("Nh·∫≠p ti√™u ƒë·ªÅ c√¥ng vi·ªác: ");
        final title = stdin.readLineSync() ?? "";
        try {
          addTodo(db, title);
        } catch (e) {
          print("Kh√¥ng th·ªÉ th√™m c√¥ng vi·ªác: $e");
        }
        break;

      case '2':
        getTodos(db);
        break;

      case '3':
        stdout.write("Nh·∫≠p ID c√¥ng vi·ªác c·∫ßn c·∫≠p nh·∫≠t: ");
        final id = int.tryParse(stdin.readLineSync() ?? "") ?? -1;
        stdout.write("Nh·∫≠p ti√™u ƒë·ªÅ m·ªõi: ");
        final newTitle = stdin.readLineSync() ?? "";
        try {
          updateTodo(db, id, newTitle);
        } catch (e) {
          print("Kh√¥ng th·ªÉ c·∫≠p nh·∫≠t c√¥ng vi·ªác: $e");
        }
        break;

      case '4':
        stdout.write("Nh·∫≠p ID c√¥ng vi·ªác c·∫ßn x√≥a: ");
        final id = int.tryParse(stdin.readLineSync() ?? "") ?? -1;
        try {
          deleteTodo(db, id);
        } catch (e) {
          print("Kh√¥ng th·ªÉ x√≥a c√¥ng vi·ªác: $e");
        }
        break;

      case '5':
        stdout.write("Nh·∫≠p ID c√¥ng vi·ªác c·∫ßn thay ƒë·ªïi tr·∫°ng th√°i: ");
        final id = int.tryParse(stdin.readLineSync() ?? "") ?? -1;
        try {
          toggleTodoStatus(db, id);
        } catch (e) {
          print("Kh√¥ng th·ªÉ thay ƒë·ªïi tr·∫°ng th√°i c√¥ng vi·ªác: $e");
        }
        break;

      case '6':
        print("Tho√°t ·ª©ng d·ª•ng. T·∫°m bi·ªát!");
        db.dispose();
        exit(0);

      default:
        print("L·ª±a ch·ªçn kh√¥ng h·ª£p l·ªá. Vui l√≤ng th·ª≠ l·∫°i.");
    }
  }
}

void addTodo(Database db, String title) {
  if (title.isEmpty) {
    throw Exception("Title kh√¥ng ƒë∆∞·ª£c ƒë·ªÉ tr·ªëng.");
  }

  try {
    db.execute('INSERT INTO todos (title) VALUES (?)', [title]);
    print("ƒê√£ th√™m c√¥ng vi·ªác: $title");
  } catch (e) {
    throw Exception("L·ªói khi th√™m c√¥ng vi·ªác: $e");
  }
}

void getTodos(Database db) {
  try {
    final result = db.select('SELECT * FROM todos');

    if (result.isEmpty) {
      print("Danh s√°ch c√¥ng vi·ªác tr·ªëng.");
    } else {
      print("Danh s√°ch c√¥ng vi·ªác:");
      for (final row in result) {
        final status =
            row['isCompleted'] == 1 ? "Ho√†n th√†nh" : "Ch∆∞a ho√†n th√†nh";
        print("- ${row['id']}: ${row['title']} [${status}]");
      }
    }
  } catch (e) {
    throw Exception("L·ªói khi l·∫•y danh s√°ch c√¥ng vi·ªác: $e");
  }
}

void updateTodo(Database db, int id, String newTitle) {
  if (newTitle.isEmpty) {
    throw Exception("Title kh√¥ng ƒë∆∞·ª£c ƒë·ªÉ tr·ªëng.");
  }

  try {
    db.execute('UPDATE todos SET title = ? WHERE id = ?', [newTitle, id]);

    final changes = db.getUpdatedRows();

    if (changes > 0) {
      print("ƒê√£ c·∫≠p nh·∫≠t c√¥ng vi·ªác c√≥ ID $id th√†nh: $newTitle");
    } else {
      print("Kh√¥ng t√¨m th·∫•y c√¥ng vi·ªác c√≥ ID $id ƒë·ªÉ c·∫≠p nh·∫≠t.");
    }
  } catch (e) {
    throw Exception("L·ªói khi c·∫≠p nh·∫≠t c√¥ng vi·ªác: $e");
  }
}

void deleteTodo(Database db, int id) {
  try {
    db.execute('DELETE FROM todos WHERE id = ?', [id]);

    final changes = db.getUpdatedRows();

    if (changes > 0) {
      print("ƒê√£ x√≥a c√¥ng vi·ªác c√≥ ID $id.");
    } else {
      print("Kh√¥ng t√¨m th·∫•y c√¥ng vi·ªác c√≥ ID $id ƒë·ªÉ x√≥a.");
    }
  } catch (e) {
    throw Exception("L·ªói khi x√≥a c√¥ng vi·ªác: $e");
  }
}

void toggleTodoStatus(Database db, int id) {
  try {
    final result = db.select('SELECT isCompleted FROM todos WHERE id = ?', [
      id,
    ]);

    if (result.isEmpty) {
      print("Kh√¥ng t√¨m th·∫•y c√¥ng vi·ªác c√≥ ID $id.");
      return;
    }

    final currentStatus = result.first['isCompleted'] as int;
    final newStatus = currentStatus == 1 ? 0 : 1;

    db.execute('UPDATE todos SET isCompleted = ? WHERE id = ?', [
      newStatus,
      id,
    ]);

    final statusText = newStatus == 1 ? "Ho√†n th√†nh" : "Ch∆∞a ho√†n th√†nh";
    print("ƒê√£ c·∫≠p nh·∫≠t tr·∫°ng th√°i c√¥ng vi·ªác c√≥ ID $id th√†nh: $statusText");
  } catch (e) {
    throw Exception("L·ªói khi c·∫≠p nh·∫≠t tr·∫°ng th√°i c√¥ng vi·ªác: $e");
  }
}
