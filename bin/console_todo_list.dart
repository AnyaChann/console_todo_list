import 'dart:io';
import 'package:sqlite3/sqlite3.dart';

void main() {
  final db = sqlite3.open('todos.db');

  // Create table if it doesn't exist
  db.execute('''
    CREATE TABLE IF NOT EXISTS todos (
      id INTEGER PRIMARY KEY AUTOINCREMENT,
      title TEXT NOT NULL,
      isCompleted INTEGER NOT NULL DEFAULT 0
    )
  ''');

  // Insert sample data if the table is empty
  insertSampleData(db);

  print("Ch√†o m·ª´ng ƒë·∫øn v·ªõi ·ª©ng d·ª•ng Todo List!");
  while (true) {
    printMenu();
    final choice = stdin.readLineSync();

    switch (choice) {
      case '1':
        handleAddTodo(db);
        break;
      case '2':
        handleGetTodos(db);
        break;
      case '3':
        handleUpdateTodo(db);
        break;
      case '4':
        handleDeleteTodo(db);
        break;
      case '5':
        handleToggleTodoStatus(db);
        break;
      case '6':
        print("Tho√°t ·ª©ng d·ª•ng. T·∫°m bi·ªát!");
        db.dispose();
        exit(0);
      default:
        print("L·ª±a ch·ªçn kh√¥ng h·ª£p l·ªá. Vui l√≤ng th·ª≠ l·∫°i.");
    }
  }
}

void printMenu() {
  print("\n==============================");
  print("       TODO LIST MENU         ");
  print("==============================");
  print("1. ‚ûï Th√™m c√¥ng vi·ªác");
  print("2. üìã Hi·ªÉn th·ªã danh s√°ch c√¥ng vi·ªác");
  print("3. ‚úèÔ∏è  C·∫≠p nh·∫≠t c√¥ng vi·ªác");
  print("4. ‚ùå X√≥a c√¥ng vi·ªác");
  print("5. ‚úÖ ƒê√°nh d·∫•u Ho√†n th√†nh/Ch∆∞a ho√†n th√†nh");
  print("6. üö™ Tho√°t");
  print("==============================\n");
}

void insertSampleData(Database db) {
  final count =
      db.select('SELECT COUNT(*) AS count FROM todos').first['count'] as int;
  if (count == 0) {
    db.execute('INSERT INTO todos (title, isCompleted) VALUES (?, ?)', [
      'H·ªçc Flutter',
      0,
    ]);
    db.execute('INSERT INTO todos (title, isCompleted) VALUES (?, ?)', [
      'Xem t√†i li·ªáu SQLite',
      1,
    ]);
    db.execute('INSERT INTO todos (title, isCompleted) VALUES (?, ?)', [
      'Vi·∫øt ·ª©ng d·ª•ng Todo List',
      0,
    ]);
    print("ƒê√£ th√™m d·ªØ li·ªáu m·∫´u.");
  }
}

void handleAddTodo(Database db) {
  stdout.write("Nh·∫≠p ti√™u ƒë·ªÅ c√¥ng vi·ªác: ");
  final title = stdin.readLineSync() ?? "";
  if (title.isEmpty) {
    print("Ti√™u ƒë·ªÅ kh√¥ng ƒë∆∞·ª£c ƒë·ªÉ tr·ªëng.");
    return;
  }
  db.execute('INSERT INTO todos (title) VALUES (?)', [title]);
  print("ƒê√£ th√™m c√¥ng vi·ªác: $title");
}

void handleGetTodos(Database db) {
  final todos = db.select('SELECT * FROM todos');
  if (todos.isEmpty) {
    print("Danh s√°ch c√¥ng vi·ªác tr·ªëng.");
  } else {
    print("Danh s√°ch c√¥ng vi·ªác:");
    for (final todo in todos) {
      final status =
          todo['isCompleted'] == 1 ? "Ho√†n th√†nh" : "Ch∆∞a ho√†n th√†nh";
      print("- ${todo['id']}: ${todo['title']} [${status}]");
    }
  }
}

void handleUpdateTodo(Database db) {
  stdout.write("Nh·∫≠p ID c√¥ng vi·ªác c·∫ßn c·∫≠p nh·∫≠t: ");
  final id = int.tryParse(stdin.readLineSync() ?? "") ?? -1;
  stdout.write("Nh·∫≠p ti√™u ƒë·ªÅ m·ªõi: ");
  final newTitle = stdin.readLineSync() ?? "";
  if (newTitle.isEmpty) {
    print("Ti√™u ƒë·ªÅ kh√¥ng ƒë∆∞·ª£c ƒë·ªÉ tr·ªëng.");
    return;
  }
  final result = db.select('SELECT id FROM todos WHERE id = ?', [id]);
  if (result.isEmpty) {
    print("Kh√¥ng t√¨m th·∫•y c√¥ng vi·ªác c√≥ ID $id.");
    return;
  }
  db.execute('UPDATE todos SET title = ? WHERE id = ?', [newTitle, id]);
  print("ƒê√£ c·∫≠p nh·∫≠t c√¥ng vi·ªác c√≥ ID $id.");
}

void handleDeleteTodo(Database db) {
  stdout.write("Nh·∫≠p ID c√¥ng vi·ªác c·∫ßn x√≥a: ");
  final id = int.tryParse(stdin.readLineSync() ?? "") ?? -1;
  final result = db.select('SELECT id FROM todos WHERE id = ?', [id]);
  if (result.isEmpty) {
    print("Kh√¥ng t√¨m th·∫•y c√¥ng vi·ªác c√≥ ID $id.");
    return;
  }
  db.execute('DELETE FROM todos WHERE id = ?', [id]);
  print("ƒê√£ x√≥a c√¥ng vi·ªác c√≥ ID $id.");
}

void handleToggleTodoStatus(Database db) {
  stdout.write("Nh·∫≠p ID c√¥ng vi·ªác c·∫ßn thay ƒë·ªïi tr·∫°ng th√°i: ");
  final id = int.tryParse(stdin.readLineSync() ?? "") ?? -1;
  final result = db.select('SELECT isCompleted FROM todos WHERE id = ?', [id]);
  if (result.isEmpty) {
    print("Kh√¥ng t√¨m th·∫•y c√¥ng vi·ªác c√≥ ID $id.");
    return;
  }
  final currentStatus = result.first['isCompleted'] as int;
  final newStatus = currentStatus == 1 ? 0 : 1;
  db.execute('UPDATE todos SET isCompleted = ? WHERE id = ?', [newStatus, id]);
  print(
    "ƒê√£ c·∫≠p nh·∫≠t tr·∫°ng th√°i c√¥ng vi·ªác c√≥ ID $id th√†nh: ${newStatus == 1 ? "Ho√†n th√†nh" : "Ch∆∞a ho√†n th√†nh"}.",
  );
}
